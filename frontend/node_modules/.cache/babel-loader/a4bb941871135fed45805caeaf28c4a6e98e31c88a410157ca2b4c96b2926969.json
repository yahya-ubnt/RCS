{"ast":null,"code":"var _jsxFileName = \"/home/mediatek/projects/referral and commission system/frontend/src/pages/Agents.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAgents, createAgent, updateAgent, deleteAgent } from '../services/agentService';\nimport useForm from '../hooks/useForm';\nimport AgentCard from '../components/AgentCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Agents = () => {\n  _s();\n  const [agents, setAgents] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState(null);\n  const {\n    values,\n    handleChange,\n    setValues,\n    resetForm\n  } = useForm({\n    name: '',\n    email: '',\n    phone: ''\n  });\n  useEffect(() => {\n    const fetchAgents = async () => {\n      try {\n        const data = await getAgents();\n        setAgents(data);\n      } catch (error) {\n        // Handle error\n      }\n    };\n    fetchAgents();\n  }, []);\n  const handleEdit = agent => {\n    setSelectedAgent(agent);\n    setValues(agent);\n  };\n  const handleDelete = async id => {\n    try {\n      await deleteAgent(id);\n      setAgents(agents.filter(a => a._id !== id));\n    } catch (error) {\n      // Handle error\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (selectedAgent) {\n        const updatedAgent = await updateAgent(selectedAgent._id, values);\n        setAgents(agents.map(a => a._id === selectedAgent._id ? updatedAgent : a));\n      } else {\n        const newAgent = await createAgent(values);\n        setAgents([...agents, newAgent]);\n      }\n      resetForm();\n      setSelectedAgent(null);\n    } catch (error) {\n      // Handle error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Agents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: values.name,\n        onChange: handleChange,\n        placeholder: \"Agent Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: values.email,\n        onChange: handleChange,\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"phone\",\n        value: values.phone,\n        onChange: handleChange,\n        placeholder: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: selectedAgent ? 'Update' : 'Create'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"agent-list\",\n      children: agents.map(agent => /*#__PURE__*/_jsxDEV(AgentCard, {\n        agent: agent,\n        onEdit: handleEdit,\n        onDelete: handleDelete\n      }, agent._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Agents, \"39zKlQ5EPNKW5KJMsVCv+L4eIO4=\", false, function () {\n  return [useForm];\n});\n_c = Agents;\nexport default Agents;\nvar _c;\n$RefreshReg$(_c, \"Agents\");","map":{"version":3,"names":["React","useState","useEffect","getAgents","createAgent","updateAgent","deleteAgent","useForm","AgentCard","jsxDEV","_jsxDEV","Agents","_s","agents","setAgents","selectedAgent","setSelectedAgent","values","handleChange","setValues","resetForm","name","email","phone","fetchAgents","data","error","handleEdit","agent","handleDelete","id","filter","a","_id","handleSubmit","e","preventDefault","updatedAgent","map","newAgent","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","placeholder","className","onEdit","onDelete","_c","$RefreshReg$"],"sources":["/home/mediatek/projects/referral and commission system/frontend/src/pages/Agents.jsx"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { getAgents, createAgent, updateAgent, deleteAgent } from '../services/agentService';\nimport useForm from '../hooks/useForm';\nimport AgentCard from '../components/AgentCard';\n\nconst Agents = () => {\n  const [agents, setAgents] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState(null);\n  const { values, handleChange, setValues, resetForm } = useForm({ name: '', email: '', phone: '' });\n\n  useEffect(() => {\n    const fetchAgents = async () => {\n      try {\n        const data = await getAgents();\n        setAgents(data);\n      } catch (error) {\n        // Handle error\n      }\n    };\n    fetchAgents();\n  }, []);\n\n  const handleEdit = (agent) => {\n    setSelectedAgent(agent);\n    setValues(agent);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await deleteAgent(id);\n      setAgents(agents.filter((a) => a._id !== id));\n    } catch (error) {\n      // Handle error\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (selectedAgent) {\n        const updatedAgent = await updateAgent(selectedAgent._id, values);\n        setAgents(agents.map((a) => (a._id === selectedAgent._id ? updatedAgent : a)));\n      } else {\n        const newAgent = await createAgent(values);\n        setAgents([...agents, newAgent]);\n      }\n      resetForm();\n      setSelectedAgent(null);\n    } catch (error) {\n      // Handle error\n    }\n  };\n\n  return (\n    <div>\n      <h1>Agents</h1>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"name\" value={values.name} onChange={handleChange} placeholder=\"Agent Name\" />\n        <input type=\"email\" name=\"email\" value={values.email} onChange={handleChange} placeholder=\"Email\" />\n        <input type=\"text\" name=\"phone\" value={values.phone} onChange={handleChange} placeholder=\"Phone\" />\n        <button type=\"submit\">{selectedAgent ? 'Update' : 'Create'}</button>\n      </form>\n      <div className=\"agent-list\">\n        {agents.map((agent) => (\n          <AgentCard key={agent._id} agent={agent} onEdit={handleEdit} onDelete={handleDelete} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Agents;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}